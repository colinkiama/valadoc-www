<examples>
	<example>
		<title>Antialias</title>
		<image>example-antialias.png</image>
		<file>antialias.vala</file>
		<compile>valac --pkg cairo antialias.vala</compile>
		<node>Cairo.Antialias</node>
		<node>Cairo.Context.set_antialias</node>
	</example>
	<example>
		<title>Arc</title>
		<image>example-arc.png</image>
		<file>arc.vala</file>
		<compile>valac --pkg cairo arc.vala</compile>
		<node>Cairo.Context.arc</node>
	</example>
	<example>
		<title>Arc, negative</title>
		<image>example-arc-negative.png</image>
		<file>arc-negative.vala</file>
		<compile>valac --pkg cairo arc-negative.vala</compile>
		<node>Cairo.Context.arc_negative</node>
	</example>
	<example>
		<title>Colours (RGBA)</title>
		<image>example-Cairo.Context.set_source_rgba.png</image>
		<file>Cairo.Context.set_source_rgba.vala</file>
		<compile>valac --pkg cairo Cairo.Context.set_source_rgba.vala</compile>
		<node>Cairo.Context.set_source_rgba</node>
	</example>
	<example>
		<title>Cartesian coordinate system (I)</title>
		<image>example-cartesian-coordinate-system.png</image>
		<file>cartesian-coordinate-system.vala</file>
		<compile>valac --pkg cairo cartesian-coordinate-system.vala</compile>
		<node>Cairo.Context.translate</node>
		<node>Cairo.Context.scale</node>
	</example>
	<example>
		<title>Cartesian coordinate system (II)</title>
		<image>example-cartesian-coordinate-system-matrix.png</image>
		<file>cartesian-coordinate-system-matrix.vala</file>
		<compile>valac --pkg cairo cartesian-coordinate-system-matrix.vala</compile>
		<node>Cairo.Context.set_matrix</node>
		<node>Cairo.Matrix.translate</node>
		<node>Cairo.Matrix.scale</node>
		<node>Cairo.Matrix</node>
	</example>
	<example>
		<title>Cartesian coordinate system (III)</title>
		<image>example-cartesian-coordinate-system-matrix-transformation.png</image>
		<file>cartesian-coordinate-system-matrix-transformation.vala</file>
		<compile>valac --pkg cairo cartesian-coordinate-system-matrix-transformation.vala</compile>
		<node>Cairo.Context.transform</node>
	</example>
	<example>
		<title>Clip regions</title>
		<image>example-clip.png</image>
		<file>clip.vala</file>
		<compile>valac --pkg cairo clip.vala</compile>
		<node>Cairo.Context.clip</node>
	</example>
	<example>
		<title>Clip regions and image surfaces</title>
		<image>example-romedalen.png</image>
		<image>example-clip-image.png</image>
		<file>clip-image.vala</file>
		<compile>valac --pkg cairo clip-image.vala</compile>
		<node>Cairo.ImageSurface</node>
		<node>Cairo.Context.paint</node>
		<node>Cairo.Context.new_path</node>
		<node>Cairo.Context.clip</node>
	</example>
	<example>
		<title>Closed path</title>
		<image>example-closed-path.png</image>
		<file>closed-path.vala</file>
		<compile>valac --pkg cairo closed-path.vala</compile>
		<node>Cairo.Context.close_path</node>
	</example>
	<example>
		<title>Curve to</title>
		<image>example-curve-to.png</image>
		<file>curve-to.vala</file>
		<compile>valac --pkg cairo curve-to.vala</compile>
		<node>Cairo.Context.curve_to</node>
	</example>
	<example>
		<title>Line styles</title>
		<image>example-dashed-lines.png</image>
		<file>dashed-lines.vala</file>
		<compile>valac --pkg cairo dashed-lines.vala</compile>
		<node>Cairo.Context.set_dash</node>
	</example>
	<example>
		<title>Fill (I)</title>
		<image>example-filled-box.png</image>
		<file>filled-box.vala</file>
		<compile>valac --pkg cairo filled-box.vala</compile>
		<node>Cairo.Context.rectangle</node>
		<node>Cairo.Context.fill</node>
	</example>
	<example>
		<title>Fill (II)</title>
		<image>example-fill-extents.png</image>
		<file>fill-extents.vala</file>
		<compile>valac --pkg cairo fill-extents.vala</compile>
		<node>Cairo.Context.fill_extents</node>
		<node>Cairo.Context.in_fill</node>
	</example>
	<example>
		<title>Fill preserve</title>
		<image>example-fill-preserve.png</image>
		<file>fill-preserve.vala</file>
		<compile>valac --pkg cairo fill-preserve.vala</compile>
		<node>Cairo.Context.fill_preserve</node>
		<node>Cairo.Context.close_path</node>
	</example>
	<example>
		<title>Fill rules</title>
		<image>example-fill-rule.png</image>
		<file>fill-rule.vala</file>
		<compile>valac --pkg cairo fill-rule.vala</compile>
		<node>Cairo.Context.new_sub_path</node>
		<node>Cairo.Context.set_fill_rule</node>
		<node>Cairo.Context.fill_preserve</node>
		<node>Cairo.Context.translate</node>
		<node>Cairo.FillRule</node>
	</example>
	<example>
		<title>Gradients</title>
		<image>example-gradient.png</image>
		<file>gradient.vala</file>
		<compile>valac --pkg cairo gradient.vala</compile>
		<node>Cairo.Context.set_source</node>
		<node>Cairo.Pattern</node>
	</example>
	<example>
		<title>Pattern</title>
		<image>example-image-pattern.png</image>
		<file>image-pattern.vala</file>
		<compile>valac --pkg cairo image-pattern.vala</compile>
		<node>Cairo.Extend.REPEAT</node>
		<node>Cairo.Pattern</node>
	</example>
	<example>
		<title>Scale and rotate</title>
		<image>example-romedalen.png</image>
		<image>example-image-rotate.png</image>
		<file>image-rotate.vala</file>
		<compile>valac --pkg cairo image-rotate.vala</compile>
		<node>Cairo.Context.scale</node>
		<node>Cairo.Context.rotate</node>
	</example>
	<example>
		<title>Layers</title>
		<image>example-layers.png</image>
		<file>layers.vala</file>
		<compile>valac --pkg cairo layers.vala</compile>
		<node>Cairo.Context.set_source_surface</node>
		<node>Cairo.Context.set_operator</node>
		<node>Cairo.Context.paint</node>
		<node>Cairo.Context.paint_with_alpha</node>
		<node>Cairo.Context.get_target</node>
		<node>Cairo.Operator</node>
	</example>
	<example>
		<title>Line cap</title>
		<image>example-line-cap.png</image>
		<file>line-cap.vala</file>
		<compile>valac --pkg cairo line-cap.vala</compile>
		<node>Cairo.Context.set_line_cap</node>
		<node>Cairo.LineCap</node>
	</example>
	<example>
		<title>Set line join</title>
		<image>example-line-joins.png</image>
		<file>line-joins.vala</file>
		<compile>valac --pkg cairo line-joins.vala</compile>
		<node>Cairo.Context.set_line_join</node>
		<node>Cairo.LineJoin</node>
	</example>
	<example>
		<title>Masks</title>
		<image>example-mask.png</image>
		<file>mask.vala</file>
		<compile>valac --pkg cairo mask.vala</compile>
		<node>Cairo.Pattern.Pattern.for_surface</node>
		<node>Cairo.Context.mask</node>
		<node>Cairo.Format</node>
	</example>
	<example>
		<title>Mask surfaces</title>
		<image>example-mask-surface.png</image>
		<file>mask-surface.vala</file>
		<compile>valac --pkg cairo mask-surface.vala</compile>
		<node>Cairo.Pattern.Pattern.for_surface</node>
		<node>Cairo.Context.mask_surface</node>
	</example>
	<example>
		<title>Add</title>
		<image>example-operator-add.png</image>
		<file>operator-add.vala</file>
		<compile>valac --pkg cairo operator-add.vala</compile>
		<node>Cairo.Operator.ADD</node>
	</example>
	<example>
		<title>Atop</title>
		<image>example-operator-atop.png</image>
		<file>operator-atop.vala</file>
		<compile>valac --pkg cairo operator-atop.vala</compile>
		<node>Cairo.Operator.ATOP</node>
	</example>
	<example>
		<title>Clear</title>
		<image>example-operator-clear.png</image>
		<file>operator-clear.vala</file>
		<compile>valac --pkg cairo operator-clear.vala</compile>
		<node>Cairo.Operator.CLEAR</node>
	</example>
	<example>
		<title>Colour burn</title>
		<image>example-operator-color-burn.png</image>
		<file>operator-color-burn.vala</file>
		<compile>valac --pkg cairo operator-color-burn.vala</compile>
		<node>Cairo.Operator.COLOR_BURN</node>
	</example>
	<example>
		<title>Colour dodge</title>
		<image>example-operator-color-dodge.png</image>
		<file>operator-color-dodge.vala</file>
		<compile>valac --pkg cairo operator-color-dodge.vala</compile>
		<node>Cairo.Operator.COLOR_DODGE</node>
	</example>
	<example>
		<title>Darken</title>
		<image>example-operator-darken.png</image>
		<file>operator-darken.vala</file>
		<compile>valac --pkg cairo operator-darken.vala</compile>
		<node>Cairo.Operator.DARKEN</node>
	</example>
	<example>
		<title>Dest</title>
		<image>example-operator-dest.png</image>
		<file>operator-dest.vala</file>
		<compile>valac --pkg cairo operator-dest.vala</compile>
		<node>Cairo.Operator.DEST</node>
	</example>
	<example>
		<title>Dest atop</title>
		<image>example-operator-dest-atop.png</image>
		<file>operator-dest-atop.vala</file>
		<compile>valac --pkg cairo operator-dest-atop.vala</compile>
		<node>Cairo.Operator.DEST_ATOP</node>
	</example>
	<example>
		<title>Dest in</title>
		<image>example-operator-dest-in.png</image>
		<file>operator-dest-in.vala</file>
		<compile>valac --pkg cairo operator-dest-in.vala</compile>
		<node>Cairo.Operator.DEST_IN</node>
	</example>
	<example>
		<title>Dest out</title>
		<image>example-operator-dest-out.png</image>
		<file>operator-dest-out.vala</file>
		<compile>valac --pkg cairo operator-dest-out.vala</compile>
		<node>Cairo.Operator.DEST_OUT</node>
	</example>
	<example>
		<title>Dest over</title>
		<image>example-operator-dest-over.png</image>
		<file>operator-dest-over.vala</file>
		<compile>valac --pkg cairo operator-dest-over.vala</compile>
		<node>Cairo.Operator.DEST_OVER</node>
	</example>
	<example>
		<title>Difference</title>
		<image>example-operator-difference.png</image>
		<file>operator-difference.vala</file>
		<compile>valac --pkg cairo operator-difference.vala</compile>
		<node>Cairo.Operator.DIFFERENCE</node>
	</example>
	<example>
		<title>Exclusion</title>
		<image>example-operator-exclusion.png</image>
		<file>operator-exclusion.vala</file>
		<compile>valac --pkg cairo operator-exclusion.vala</compile>
		<node>Cairo.Operator.EXCLUSION</node>
	</example>
	<example>
		<title>Hard light</title>
		<image>example-operator-hard-light.png</image>
		<file>operator-hard-light.vala</file>
		<compile>valac --pkg cairo operator-hard-light.vala</compile>
		<node>Cairo.Operator.HARD_LIGHT</node>
	</example>
	<example>
		<title>HSL Colour</title>
		<image>example-operator-hsl-color.png</image>
		<file>operator-hsl-color.vala</file>
		<compile>valac --pkg cairo operator-hsl-color.vala</compile>
		<node>Cairo.Operator.HSL_COLOR</node>
	</example>
	<example>
		<title>HSL Hue</title>
		<image>example-operator-hsl-hue.png</image>
		<file>operator-hsl-hue.vala</file>
		<compile>valac --pkg cairo operator-hsl-hue.vala</compile>
		<node>Cairo.Operator.HSL_HUE</node>
	</example>
	<example>
		<title>HSL Luminosity</title>
		<image>example-operator-hsl-luminosity.png</image>
		<file>operator-hsl-luminosity.vala</file>
		<compile>valac --pkg cairo operator-hsl-luminosity.vala</compile>
		<node>Cairo.Operator.HSL_LUMINOSITY</node>
	</example>
	<example>
		<title>HSL Saturation</title>
		<image>example-operator-hsl-saturation.png</image>
		<file>operator-hsl-saturation.vala</file>
		<compile>valac --pkg cairo operator-hsl-saturation.vala</compile>
		<node>Cairo.Operator.HSL_SATURATION</node>
	</example>
	<example>
		<title>In</title>
		<image>example-operator-in.png</image>
		<file>operator-in.vala</file>
		<compile>valac --pkg cairo operator-in.vala</compile>
		<node>Cairo.Operator.IN</node>
	</example>
	<example>
		<title>Lighten</title>
		<image>example-operator-lighten.png</image>
		<file>operator-lighten.vala</file>
		<compile>valac --pkg cairo operator-lighten.vala</compile>
		<node>Cairo.Operator.LIGHTEN</node>
	</example>
	<example>
		<title>Multiply</title>
		<image>example-operator-multiply.png</image>
		<file>operator-multiply.vala</file>
		<compile>valac --pkg cairo operator-multiply.vala</compile>
		<node>Cairo.Operator.MULTIPLY</node>
	</example>
	<example>
		<title>Out</title>
		<image>example-operator-out.png</image>
		<file>operator-out.vala</file>
		<compile>valac --pkg cairo operator-out.vala</compile>
		<node>Cairo.Operator.OUT</node>
	</example>
	<example>
		<title>Over</title>
		<image>example-operator-over.png</image>
		<file>operator-over.vala</file>
		<compile>valac --pkg cairo operator-over.vala</compile>
		<node>Cairo.Operator.OVER</node>
	</example>
	<example>
		<title>Overlay</title>
		<image>example-operator-overlay.png</image>
		<file>operator-overlay.vala</file>
		<compile>valac --pkg cairo operator-overlay.vala</compile>
		<node>Cairo.Operator.OVERLAY</node>
	</example>
	<example>
		<title>Saturate</title>
		<image>example-operator-saturate.png</image>
		<file>operator-saturate.vala</file>
		<compile>valac --pkg cairo operator-saturate.vala</compile>
		<node>Cairo.Operator.SATURATE</node>
	</example>
	<example>
		<title>Screen</title>
		<image>example-operator-screen.png</image>
		<file>operator-screen.vala</file>
		<compile>valac --pkg cairo operator-screen.vala</compile>
		<node>Cairo.Operator.SCREEN</node>
	</example>
	<example>
		<title>Soft light</title>
		<image>example-operator-soft-light.png</image>
		<file>operator-soft-light.vala</file>
		<compile>valac --pkg cairo operator-soft-light.vala</compile>
		<node>Cairo.Operator.SOFT_LIGHT</node>
	</example>
	<example>
		<title>Source</title>
		<image>example-operator-source.png</image>
		<file>operator-source.vala</file>
		<compile>valac --pkg cairo operator-source.vala</compile>
		<node>Cairo.Operator.SOURCE</node>
	</example>
	<example>
		<title>XOR</title>
		<image>example-operator-xor.png</image>
		<file>operator-xor.vala</file>
		<compile>valac --pkg cairo operator-xor.vala</compile>
		<node>Cairo.Operator.XOR</node>
	</example>
	<example>
		<title>Curves, relative</title>
		<image>example-relative-curve-to.png</image>
		<file>relative-curve-to.vala</file>
		<compile>valac --pkg cairo relative-curve-to.vala</compile>
		<node>Cairo.Context.rel_curve_to</node>
	</example>
	<example>
		<title>Lines, relative</title>
		<image>example-relative-lines.png</image>
		<file>relative-lines.vala</file>
		<compile>valac --pkg cairo relative-lines.vala</compile>
		<node>Cairo.Context.rel_move_to</node>
		<node>Cairo.Context.rel_line_to</node>
	</example>
	<example>
		<title>Rotated text</title>
		<image>example-rotated-text.png</image>
		<file>rotated-text.vala</file>
		<compile>valac --pkg cairo rotated-text.vala</compile>
		<node>Cairo.Context.set_font_matrix</node>
		<node>Cairo.Matrix.rotate</node>
	</example>
	<example>
		<title>Save and Restore</title>
		<image>example-save-restore.png</image>
		<file>save-restore.vala</file>
		<compile>valac --pkg cairo save-restore.vala</compile>
		<node>Cairo.Context.restore</node>
		<node>Cairo.Context.save</node>
	</example>
	<example>
		<title>Simple lines</title>
		<image>example-simple-lines.png</image>
		<file>simple-lines.vala</file>
		<compile>valac --pkg cairo simple-lines.vala</compile>
		<node>Cairo.ImageSurface</node>
		<node>Cairo.Context.move_to</node>
		<node>Cairo.Context.line_to</node>
		<node>Cairo.Context.set_line_width</node>
		<node>Cairo.Context.stroke</node>
		<node>Cairo.Surface.write_to_png</node>
		<node>Cairo.ImageSurface.ImageSurface</node>
		<node>Cairo.Context.Context</node>
	</example>
	<example>
		<title>Simple text</title>
		<image>example-simple-text.png</image>
		<file>simple-text.vala</file>
		<compile>valac --pkg cairo simple-text.vala</compile>
		<node>Cairo.Context.set_source_rgb</node>
		<node>Cairo.Context.select_font_face</node>
		<node>Cairo.Context.set_font_size</node>
		<node>Cairo.Context.show_text</node>
	</example>
	<example>
		<title>Stroke-extends and in-stroke</title>
		<image>example-stroke-extents-in-stroke.png</image>
		<file>stroke-extents-in-stroke.vala</file>
		<compile>valac --pkg cairo stroke-extents-in-stroke.vala</compile>
		<node>Cairo.Context.stroke_extents</node>
		<node>Cairo.Context.in_stroke</node>
	</example>
	<example>
		<title>Centered text</title>
		<image>example-text-centered.png</image>
		<file>text-centered.vala</file>
		<compile>valac --pkg cairo text-centered.vala</compile>
		<node>Cairo.TextExtents</node>
	</example>
	<example>
		<title>TextExtents</title>
		<image>example-text-extends.png</image>
		<file>text-extends.vala</file>
		<compile>valac --pkg cairo text-extends.vala</compile>
		<node>Cairo.Context.text_extents</node>
		<node>Cairo.TextExtents</node>
	</example>
</examples>
